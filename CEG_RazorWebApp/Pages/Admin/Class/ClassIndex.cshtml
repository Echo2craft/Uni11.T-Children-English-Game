@page "/Admin/Class/Index"
@model CEG_RazorWebApp.Pages.Admin.Class.ClassIndexModel
@{
    Layout = null;
    ViewData["Title"] = "Admin All Classes Page";
    string? search = string.Empty;

    var createClass = Model.CreateClass;
    Layout = "~/Pages/Shared/_ALayout.cshtml";
}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>
<body>
    <div class="main-content">
        <div class="main">
            <div class="container-fluid">
                <div class="row">
                    <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                        <ol class="breadcrumb">
                            <li class="breadcrumd-item">
                                <a href="#">Manage</a>
                            </li>
                            <li class="breadcrumd-item">
                                <span>/</span>
                            </li>
                            <li class="breadcrumd-item">
                                <a href="/Admin/Class/Index">Class</a>
                            </li>
                        </ol>
                    </div>
                </div>
                <section>
                    <div id="alertContainer"></div>
                    <div class="card">
                        <div class="card-body">
                            <!-- Nav tabs -->
                            <ul class="nav nav-tabs">
                                <!-- dung vong for o day -->
                                <li class="nav-item">
                                    <a class="nav-link active" data-toggle="tab" href="/Admin/Class/Index">
                                        <i class='bx bx-home-alt-2'></i>
                                        <span>All Classes</span>
                                    </a>
                                </li>
                            </ul>
                            <!-- Tab panes -->
                            <div class="tab-content">
                                <!-- home1 -->
                                <div class="tab-pane active" id="home1" role="tabpanel">
                                    <div class="row search">
                                        <div class="col-sm-12 d-flex">
                                            <div class="col-sm-6 d-flex address-home">
                                            </div>
                                            <div class="col-sm-6 d-flex justify-content-end">
                                                <form method="get" asp-route-search="@search">
                                                    <div>
                                                        <label>
                                                            <input asp-for="@search" class="form-control" type="text" placeholder="Search..." value="@search">
                                                            <i class='bx bx-search-alt'></i>
                                                        </label>
                                                    </div>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row card-content" id="classList">
                                        <!-- dung vong for o day -->
                                    </div>
                                    <!-- end tapnet -->
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>
        </div>
    </div>
    <div id="addClass" class="modal fade" role="dialog">
        <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
            <div class="modal-content modal-addRoom">
                <div class="modal-header">
                    <h4 class="modal-title">Add new Class</h4>
                </div>
                <form method="post" id="createClassForm">
                    <div class="modal-body">
                        <div class="row p-4">
                            <div class="col-12">
                                <div class="row form-group">
                                    <label asp-for="@createClass.ClassName" class="col-md-3 col-form-label text-md-right"></label>
                                    <input asp-for="@createClass.ClassName" value="@createClass.ClassName" type="text" placeholder="Class Name..." required class="form-control col-md-7">
                                    <span asp-validation-for="@createClass.ClassName" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                    <label asp-for="@createClass.MinStudents" class="col-md-3 col-form-label text-md-right"></label>
                                    <input asp-for="@createClass.MinStudents" value="@createClass.MinStudents" type="number" min="@CEG_RazorWebApp.Libraries.Constants.CLASS_MINIMUM_STUDENTS_REQ" required class="form-control col-md-7">
                                    <span asp-validation-for="@createClass.MinStudents" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                    <label asp-for="@createClass.MaxStudents" class="col-md-3 col-form-label text-md-right"></label>
                                    <input asp-for="@createClass.MaxStudents" value="@createClass.MaxStudents" type="number" min="@CEG_RazorWebApp.Libraries.Constants.CLASS_MAXIMUM_STUDENTS_REQ" required class="form-control col-md-7">
                                    <span asp-validation-for="@createClass.MaxStudents" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                    <label asp-for="@createClass.TeacherName" class="col-md-3 col-form-label text-md-right"></label>
                                    <select class="form-control col-md-7 custom-select" asp-for="@createClass.TeacherName" required></select>
                                    <span asp-validation-for="@createClass.TeacherName" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>


                                    <label asp-for="@createClass.CourseName" class="col-md-3 col-form-label text-md-right">Select a available Course</label>
                                    @* <input data-courseName="A Course" type="text" id="search-course-dropdown" class="form-control col-md-7 custom-select text-md-left" placeholder="Search a particular course...">
                                    <ul class="search-course-results dropdown-menu" id="search-course-results"></ul> *@
                                    <div class="col-md-7">
                                        <!-- search bar with dropdown list-->
                                        <input data-courseName="A Course" type="text" id="search-course-dropdown" class="form-control custom-select text-md-left" placeholder="Search a particular course..." required>
                                        <ul class="search-course-results dropdown-menu" id="search-course-results"></ul>
                                    </div>
                                    <span asp-validation-for="@createClass.CourseName" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                    @* <label asp-for="@createClass.CourseName" class="col-md-3 col-form-label text-md-right"></label>
                                    <select class="form-control col-md-7 custom-select" asp-for="@createClass.CourseName" required></select>
                                    <span asp-validation-for="@createClass.CourseName" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span> *@

                                    <label asp-for="@createClass.StartDate" class="col-md-3 col-form-label text-md-right"></label>
                                    <input asp-for="@createClass.StartDate" type="datetime-local" value="@createClass.StartDate.ToString("yyyy-MM-ddTHH:mm")" class="form-control col-md-7" required>
                                    <span asp-validation-for="@createClass.StartDate" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                    <label asp-for="@createClass.EndDate" class="col-md-3 col-form-label text-md-right"></label>
                                    <input asp-for="@createClass.EndDate" type="datetime-local" value="@createClass.EndDate.ToString("yyyy-MM-ddTHH:mm")" class="form-control col-md-7" required>
                                    <span asp-validation-for="@createClass.EndDate" id="error_message"
                                            class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                    <div id="session-table_wrapper" class="dataTables_wrapper no-footer col-md-12">
                                        <table id="session-table"
                                               class="table table-striped table-bordered dataTable no-footer"
                                               aria-describedby="session-table_info">
                                            <thead>
                                                <tr>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="session-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Session ID: activate to sort column ascending">
                                                        Session ID
                                                    </th>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="session-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Session Number: activate to sort column ascending">
                                                        Session Number
                                                    </th>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="session-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Title: activate to sort column ascending">
                                                        Session Title
                                                    </th>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="session-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Description: activate to sort column ascending">
                                                        Session Description
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>

                                    @* <label asp-for="@createClass.WeeklySchedule" class="col-md-3 col-form-label text-md-right"></label>
                                    <select class="form-control col-md-7 custom-select" asp-for="@createClass.WeeklySchedule" required></select>
                                    <span asp-validation-for="@createClass.WeeklySchedule" id="error_message"
                                          class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span> *@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer justify-content-center">
                        <button class="btn btn-success" type="submit">Create</button>
                        <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script>
        var token = sessionStorage.getItem('token');
        var apiUrl = sessionStorage.getItem('apiUrl');
        var classList = [];
        var courseList;
        var table;
        $(document).ready(function () {
            table = new DataTable('#session-table', {
                data: [],
                deferRender: false,
                responsive: true,
                columns: [
                    { data: 'sessionId' },
                    { data: 'number' },
                    { data: 'title' },
                    { data: 'description' }
                ]
            });
            callApiGetClassList();
            $('#search').on('keyup', function (event) {
                // Get the search term
                var searchTerm = $(this).val().toLowerCase();

                // Filter the classes based on the search term
                var filteredclassList = classList.filter(function (classObject) {
                    return classObject.className.toLowerCase().includes(searchTerm);
                });

                // Display the filtered classList
                setClassDisplay(filteredclassList);
            });
            // Call API to get the list of teacher names
            $.ajax({
                url: apiUrl + 'Teacher/All/Fullname', // API endpoint
                type: 'GET',
                success: function (response) {

                    // Check if the status is true
                    if (response.status) {
                        var select = $('#createClass_TeacherName'); // Reference to the <select> element
                        select.empty(); // Clear any existing options

                        // Append a default option
                        // select.append('<option value="">--Select a Teacher--</option>');

                        // Loop through the data array and append each name as an option
                        $.each(response.data, function (index, teacherName) {
                            select.append('<option value="' + teacherName + '">' + teacherName + '</option>');
                        });
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                }
            });
            // Call API to get the list of course names
            $.ajax({
                url: apiUrl + 'Course/All/Available',// API endpoint
                type: 'GET',
                success: function (response) {

                    // Check if the status is true
                    if (response.status) {
                        //var select = $('#createClass_CourseName');// Reference to the <select> element
                        //select.empty();// Clear any existing options

                        //Append a default option
                        //select.append('<option value="">--Select a Teacher--</option>');

                        //Loop through the data array and append each name as an option
                        // $.each(response.data, function (index, course) {
                        //     select.append('<option value="' + course.courseName + '">' + course.courseName + '</option>');
                        // });
                        courseList = response.data;
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                    showAlert('success', 'Data fetched successfully.');
                }
            });
        });
        // dropdown js
        $('#search-course-dropdown').on('keyup', function () {
            var query = $(this).val().toLowerCase();
            if (query) {
                // Filter options based on the search input
                var results = courseList.filter(function (item) {
                    return item.courseName && item.courseName.toLowerCase().includes(query);
                });

                // Render the dropdown list
                renderDropdown(results);
                $('#search-course-results').show(); // Show the dropdown list
            } else {
                $('#search-course-results').hide(); // Hide the dropdown if input is empty
            }
        });

        // Close dropdown when clicking outside
        $(document).on('click', function (event) {
            if (!$(event.target).closest('#search-course-dropdown').length) {
                $('#search-course-results').hide();
                $('#search-course-results').empty(); // Close dropdown

                const selectedText = $('#search-course-dropdown').val();
                console.log(courseList);
                if (courseList && courseList.length > 0 && selectedText) {
                    var selectedCourse = courseList.filter(function (course) {
                        return course.courseName === selectedText;
                    });
                    // Ensure that at least one course was found and has sessions
                    if (selectedCourse.length > 0 && selectedCourse[0].sessions) {
                        table.clear().rows.add(selectedCourse[0].sessions).draw();
                    } else {
                        console.error('Selected course or its sessions not found.');
                        table.clear().draw();
                    }
                }

            } else if ($(event.target).closest('#search-course-dropdown').length) {
                renderDropdown(courseList);
                $('#search-course-results').show();
            }
        });
        $(document).on('click', '.search-course-results li', function () {
            const selectedText = $(this).text();
            const selectedId = $(this).data('courseName');

            // Fill the input with the selected text
            $('#search-course-dropdown').val(selectedText);
            $('#search-course-dropdown').attr('data-courseName', selectedId);

            // You can store the selected ID for further processing
            // console.log('Selected Question ID:', selectedId);

            // Optionally, close the dropdown
            $('#search-course-results').empty(); // Clear dropdown
        });
        // end of dropdown js
        // Ensure dropdown behavior in modal is smooth
        $('#addClass').on('shown.bs.modal', function () {
            $('#search-course-dropdown').focus();  // Auto-focus on the input when modal opens
        });
        // Function to render the dropdown with filtered results
        function renderDropdown(options) {
            $('#search-course-results').empty(); // Clear the dropdown list

            if (options.length === 0) {
                $('#search-course-results').append('<li class="dropdown-item disabled">No Course Found</li>');
            } else {
                options.forEach(function (option) {
                    $('#search-course-results').append('<li data-courseName="' + option.courseName + '" class="dropdown-item">' + option.courseName + '</li>');
                });
            }

        }
        // Function to display alerts
        function showAlert(type, message) {
            var alertHtml = '';

            if (type === 'success') {
                alertHtml = `
                                <div class="alert alert-success alert-dismissible fade show" id="notif">
                                    <i class='bx bx-message-alt-x p-1'></i>
                                    <strong class="mr-1">` + message + `</strong>
                                    <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                        <span><i class='bx bx-x'></i></span>
                                    </button>
                                </div>`;
            } else if (type === 'error') {
                alertHtml = `
                                <div class="alert alert-danger alert-dismissible fade show" id="notif">
                                    <i class='bx bx-message-alt-x p-1'></i>
                                    <strong class="mr-1">` + message + `</strong>
                                    <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                        <span><i class='bx bx-x'></i></span>
                                    </button>
                                </div>`;
            }

            // Inject the alert HTML into the alert container
            $('#alertContainer').html(alertHtml);
        }
        function callApiGetClassList(){
            $.ajax({
                url: apiUrl + 'Class/Admin/All', // API endpoint
                type: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + token// Include the JWT token
                },
                success: function (response) {
                    // Log the entire response to the console for debugging

                    // Check if the status is true
                    if (response.status) {
                        classList = response.data;
                        setClassDisplay(classList);
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call:", error);
                    //showAlert('success', 'Data fetched successfully.');
                }
            });
        }
        function setClassDisplay(data){
            var classList = $('#classList');
            // Reference to the <classList> element
            classList.empty(); // Clear any existing options
            var cardCreateClassHtml = `
                <div class="col-xl-3 col-lg-6 col-sm-6 my-3 item">
                    <div class="card1 card-child">
                        <div class="card-body add-club">
                            <button class="border-0" data-toggle="modal" data-target="#addClass">
                                <span>Add Class</span>
                                <i class='bx bx-add-to-queue'></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            var select = $('#createClass_WeeklySchedule'); // Reference to the <select> element
            select.empty();
            select.append(getScheduleOptions());
            classList.append(cardCreateClassHtml);
            // Loop through the data array and append each class div
            $.each(data, function (index, classObj) {
                var formattedStartDate = formatDate(classObj.startDate);
                var formattedEndDate = formatDate(classObj.endDate);
                var statusText = '';
                switch (classObj.status) {
                    case 'Open':
                        statusText = `<span class="outcome" style="float: left;">Status: ${classObj.status}</span>`
                        break;
                    case 'Draft':
                    case 'Postponed':
                        statusText = `<span class="approval" style="float: left;">Status: ${classObj.status}</span>`
                        break;
                    case 'Ended':
                    case 'Cancelled':
                        statusText = `<span class="destroy" style="float: left;">Status: ${classObj.status}</span>`
                        break;
                }
                // Construct card HTML
                var cardHtml = `
                    <div class="col-xl-3 col-lg-6 col-sm-6 my-3">
                        <div class="card1 card-child">
                            <div class="club-name">
                                Class ID: ${classObj.classId}
                                <div class="status">
                                    ${statusText}
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="club-title">
                                    <ul>
                                        <li><h6>Class name:</h6><span>${classObj.className}</span></li>
                                        <li><h6>Course:</h6><span>${classObj.course.courseName}</span></li>
                                        <li><h6>Teacher:</h6><span>${classObj.teacher.account.fullname}</span></li>
                                        <li><h6>Start date:</h6><span>${formattedStartDate}</span></li>
                                        <li><h6>End date:</h6><span>${formattedEndDate}</span></li>
                                        <li><h6>Minimum students amount:</h6><span>${classObj.minimumStudents}</span></li>
                                        <li><h6>Maximum students amount:</h6><span>${classObj.maximumStudents}</span></li>
                                        <li><h6>Current students amount:</h6><span>${classObj.studentProgress.length}</span></li>
                                        <li><h6>Weekly scheduled sessions amount:</h6><span>${classObj.schedules.length}</span></li>
                                        <li><h6>Current enrolls amount:</h6><span>${classObj.enrolls.length}</span></li>
                                    </ul>
                                </div>
                            </div>
                            <div class="form-group mx-auto">
                                <a class="btn btn-primary clickable-row" href="/Admin/Class/${classObj.classId}/Info" role="button">Details</a>
                            </div>
                        </div>
                    </div>
                `;
                // Append the constructed HTML to the class list container
                // <form method="get" asp-route-id="${classObj.classId}">
                //     <button class="btn btn-primary clickable-row" type="submit">See Detail</button>
                // </form>
                classList.append(cardHtml);
            });
        }
        function getScheduleOptions(selectedType) {
            var options = @Html.Raw(Model.SchedulePresets); // Example types
            console.log(options);
            var html = '';

            options.forEach(function (type) {
                html += `<option value="${type}" ${selectedType === type ? 'selected' : ''}>${type}</option>`;
            });

            return html;
        }
        function formatDate(date) {
            let d = new Date(date);

            // Get day, month, year
            let day = String(d.getDate()).padStart(2, '0');
            let month = String(d.getMonth() + 1).padStart(2, '0'); // Months are zero-based
            let year = d.getFullYear();

            // Get hours, minutes
            let hours = String(d.getHours()).padStart(2, '0');
            let minutes = String(d.getMinutes()).padStart(2, '0');

            // Optionally, get seconds
            let seconds = String(d.getSeconds()).padStart(2, '0');

            // Return the formatted date and time as `dd/mm/yyyy hh:mm`
            return `${day}/${month}/${year} ${hours}:${minutes}`;

            // If you want to include seconds as well, use this return:
            // return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
        }
        $("#createClassForm").submit(function (event) {
            event.preventDefault(); // Prevent the form from submitting

            // Gather form data
            var classData = {
                ClassName: $("#createClass_ClassName").val(),
                MinStudents: $("#createClass_MinStudents").val(),
                MaxStudents: $("#createClass_MaxStudents").val(),
                TeacherName: $("#createClass_TeacherName").val(),
                CourseName: $("#createClass_CourseName").val(),
                StartDate: $("#createClass_StartDate").val(),
                EndDate: $("#createClass_EndDate").val(),
                WeeklySchedule: $('#createClass_WeeklySchedule').val()
            };

            // Make the AJAX POST request
            $.ajax({
                url: apiUrl + 'Class/Create',
                headers: {
                    'Authorization': 'Bearer ' + token// Include the JWT token
                },
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(classData),
                success: function (response) {
                    // Log the entire response to the console for debugging
                    // Check if the status is true
                    if (response.status) {
                        alert('Class created successfully!');
                        $('#createClassForm').trigger("reset");
                        callApiGetClassList();
                    } else {
                        console.error("API returned false status. Message:", response.ErrorMessage);
                    }
                },
                error: function (error) {
                    alert("Error in api call:" + error);
                    console.error("Error in api call", error);
                    //showAlert('success', 'Data fetched successfully.');
                }
            });
        });
    </script>
</body>
</html>