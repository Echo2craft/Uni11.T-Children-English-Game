@page "/Admin/Class/{classId}/Info"
@model CEG_RazorWebApp.Pages.Admin.Class.ClassInfoModel
@{
    ViewData["Title"] = "Admin Class Info Page";
    string? search = string.Empty;
    Layout = "~/Pages/Shared/_ALayout.cshtml";
}
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>
    <body>
        <div class="main-content">
            <div class="main">
                <div class="container-fluid">
                    <div class="row">
                        <div class="offset-sm-6 col-sm-6  d-flex justify-content-sm-end p-md-0 mt-2 mt-sm-0 ">
                            <ol class="breadcrumb">
                                <li class="breadcrumd-item">
                                    <a href="#">Manage</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Class/Index">Class</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Class/@Model.ClassID/Info">@Model.ClassID</a>
                                </li>
                                <li class="breadcrumd-item">
                                    <span>/</span>
                                </li>
                                <li class="breadcrumd-item">
                                    <a href="/Admin/Class/@Model.ClassID/Info">Info</a>
                                </li>
                            </ol>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-7 customer-booking">
                            <div class="row">
                                <div class="card profile col-12 mb-4">
                                    <div class="card-header" id="class-title-status">
                                        <h4>Class <label id="class-class-title" class="truncate"></label> Information</h4>
                                    </div>
                                    <div id="alertContainer"></div>
                                    <div class="card-body">
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Class ID:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-id">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Class Name:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-name">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Course information:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <a id="class-course">
                                                </a>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Assigned Teacher:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <a id="class-teacher">
                                                </a>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Start Date:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-start-date">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">End Date:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-end-date">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Current students amount:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-current-students-amount">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Minimum students amount:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-minimum-students-amount">
                                                </span>
                                            </div>
                                        </div>
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Maximum students amount:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-maximum-students-amount">
                                                </span>
                                            </div>
                                        </div>
                                        @* <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Enroll requests amount:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-enrolls-amount">
                                                </span>
                                            </div>
                                        </div> *@
                                        <div class="row mb-sm-2">
                                            <div class="col-md-5 text-md-right">
                                                <label class="col-form-label">Scheduled sessions amount:</label>
                                            </div>
                                            <div class="col-md-7">
                                                <span id="class-schedules-amount">
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="card profile col-12 mb-4">
                                    <div class="card-header" id="class-allow-add-schedule">
                                        <h4>Scheduled Session List</h4>
                                    </div>
                                    <div class="card-body" id="schedule_list">
                                        <h5>No scheduled session found</h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-5 cardFB">
                            <div class="card profile">
                                <div class="card-header">
                                    <h4>Enroll requests</h4>
                                </div>
                                <div class="card-body">
                                    <div id="enroll-table_wrapper" class="dataTables_wrapper no-footer">
                                        <table id="enroll-table"
                                               class="table table-striped table-bordered dataTable no-footer"
                                               aria-describedby="enroll-table_info">
                                            <thead>
                                                <tr>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="enroll-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Request ID: activate to sort column ascending">
                                                        Request ID
                                                    </th>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="enroll-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Student Name: activate to sort column ascending">
                                                        Student Name
                                                    </th>
                                                    <th class="sorting sorting_asc" tabindex="0"
                                                        aria-controls="enroll-table" rowspan="1"
                                                        colspan="1" aria-sort="ascending"
                                                        aria-label="Status: activate to sort column ascending">
                                                        Status
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="changeClassStatus" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Update Class Status</h4>
                    </div>
                    @* <form method="post" id="updateCourseStatusForm">
                        <div class="modal-body">
                            <div class="row p-4">
                                <div class="col-12">
                                    <div class="row form-group">
                                        <label for="updateCourseStatus_Status" class="col-md-3 col-form-label mt-3 text-md-right">New Status (this action cannot be undone!)</label>
                                        <select class="form-control col-md-7 custom-select" id="updateCourseStatus_Status"></select>
                                        <span asp-validation-for="@updateCourse.Status" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer justify-content-center">
                            <button class="btn btn-success" type="submit">Update</button>
                            <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                        </div>
                    </form> *@
                </div>
            </div>
        </div>
        <div id="editClass" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Edit Class infomation</h4>
                    </div>
                    <form method="put" id="editClassForm" class="form-group">
                        <div class="modal-body">
                            <div class="modal-body">
                                <div class="col-12">
                                    @* <div class="row form-group">
                                        <label asp-for="updateClass.ClassName" class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8">
                                            <input asp-for="@updateClass.ClassName" value="@createClass.ClassName" type="text" placeholder="Class Name..." required class="form-control col-md-7">
                                            <span asp-validation-for="@updateQuestion.Question" id="error_message"
                                                  class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                        </div>
                                    </div>
                                    <div class="row form-group">
                                        <label asp-for="@updateQuestion.Question" class="col-sm-4 col-form-label"></label>
                                        <div class="col-sm-8">
                                            <textarea asp-for="@updateQuestion.Question" value="@updateQuestion.Question" required class="form-control"></textarea>
                                            <span asp-validation-for="@updateQuestion.Question" id="error_message"
                                                  class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                        </div>
                                    </div> *@
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer justify-content-center">
                            <button class="btn btn-success" type="submit" value="Update">Save</button>
                            <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        @* <div id="createAnswer" class="modal fade" role="dialog">
            <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
                <div class="modal-content modal-addRoom">
                    <div class="modal-header">
                        <h4 class="modal-title">Add new Homework Answer</h4>
                    </div>
                    <form method="post" id="createAnswerForm">
                        <div class="modal-body">
                            <div class="row p-4">
                                <div class="col-12">
                                    <div class="row form-group">
                                        <label asp-for="@createAnswer.Answer" class="col-md-4 col-form-label text-md-right"></label>
                                        <textarea asp-for="@createAnswer.Answer" value="@createAnswer.Answer" required class="col-md-8 form-control"></textarea>
                                        <span asp-validation-for="@createAnswer.Answer" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>
                                    </div>
                                    <div class="row form-group">
                                        <label asp-for="@createAnswer.Type" class="col-md-4 col-form-label text-md-right"></label>
                                        <select class="col-md-8 form-control custom-select" asp-for="@createAnswer.Type"></select>
                                        <span asp-validation-for="@createAnswer.Type" id="error_message"
                                              class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2"></span>

                                        <input asp-for="@createAnswer.QuestionId" value="@Model.QuestionId" type="text" required hidden readonly>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer justify-content-center">
                            <button class="btn btn-success" type="submit" name="action" value="createAnswer">Create</button>
                            <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div> *@
        <script>
            var token = sessionStorage.getItem('token');
            var apiUrl = sessionStorage.getItem('apiUrl');
            var enrollList;
            var table;
            $(document).ready(function () {
                table = new DataTable('#enroll-table', {
                    data: [],
                    deferRender: false,
                    responsive: true,
                    columns: [
                        { data: 'enrollId' },
                        { data: 'student.account.fullname' },
                        { data: 'status' }
                    ]
                });
                callApiGetClassDetail();
                $('#editClassForm').submit(function (event) {
                    event.preventDefault(); // Prevent the form from submitting normally

                    //Get the form data
                    var formData = {
                        question: $('textarea[id="updateQuestion_Question"]').val()
                    };

                    //Make the AJAX request
                    callApiPutUpdateQuestion(formData);
                    $('#editClassForm').trigger("reset");
                });
                // $('#createAnswerForm').submit(function (event) {
                //     event.preventDefault(); Prevent the form from submitting normally

                //     Get the form data
                //     var formData = {
                //         answer: $('textarea[id="createAnswer_Answer"]').val(),
                //         type: $('select[id="createAnswer_Type"]').val(),
                //         questionid: $('input[id="createAnswer_QuestionId"]').val()
                //     };

                //     Make the AJAX request
                //     callApiPostCreateAnswer(formData);
                //     $('#createAnswerForm').trigger("reset");
                // });
                $(document).on('submit', 'form[id^="editAnswerForm_"]', function (event) {
                    event.preventDefault();
                    // Extract the answerId from the form's id
                    let answerId = $(this).attr('id').split('_')[1];

                    // Collect form data
                    let formData = {
                        answer: $('#updateAnswer_' + answerId + '_Answer').val(),
                        type: $('#updateAnswer_' + answerId + '_Type').val()
                    };

                    // Call the API to update the answer
                    callApiPutUpdateAnswer(formData, answerId);

                    // Optionally reset the form
                    //$(this).trigger("reset");
                });
            });
            // Function to display alerts
            function showAlert(type, message) {
                var alertHtml = '';

                if (type === 'success') {
                    alertHtml = `
                        <div class="alert alert-success alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                } else if (type === 'error') {
                    alertHtml = `
                        <div class="alert alert-danger alert-dismissible fade show" id="notif">
                            <i class='bx bx-message-alt-x p-1'></i>
                            <strong class="mr-1">` + message + `</strong>
                            <button type="button" class="close h-100" data-dismiss="alert" aria-label="Close">
                                <span><i class='bx bx-x'></i></span>
                            </button>
                        </div>
                    `;
                }

                // Inject the alert HTML into the alert container
                $('#alertContainer').html(alertHtml);
            }
            function callApiPutUpdateQuestion(formData){
                $.ajax({
                    url: apiUrl + 'Class/@Model.ClassID/Update', // Specify your Razor Page here
                    type: 'PUT',
                    data: JSON.stringify(formData),
                    headers: {
                        'Authorization': 'Bearer ' + token, // Token for authentication
                    },
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        // Handle success (display a success message or redirect, etc.)
                        if (response.status) {
                            showAlert('success',"Class update successfully");
                            callApiGetClassDetail();
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error (display the validation message, etc.)
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                    }
                });
            }
            function callApiPutUpdateAnswer(formData,answerId) {
                $.ajax({
                    url: apiUrl + 'Answer/' + answerId + '/Update', // Specify your Razor Page here
                    type: 'PUT',
                    data: JSON.stringify(formData),
                    headers: {
                        'Authorization': 'Bearer ' + token, // Token for authentication
                    },
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        // Handle success (display a success message or redirect, etc.)
                        if (response.status) {
                            showAlert('success', "Answer update successfully");
                            $('.modal-backdrop').remove();
                            // Remove specific class from body
                            $('body').removeClass('modal-open');

                            // Remove all inline styles from body
                            $('body').removeAttr('style');
                            callApiGetClassDetail();
                            showAlert('','');
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error (display the validation message, etc.)
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                    }
                });
            }
            function callApiPostCreateAnswer(formData){
                $.ajax({
                    url: apiUrl + 'Answer/Create', // Specify your Razor Page here
                    type: 'POST',
                    data: JSON.stringify(formData),
                    headers: {
                        'Authorization': 'Bearer ' + token, // Token for authentication
                    },
                    contentType: 'application/json; charset=utf-8',
                    success: function (response) {
                        // Handle success (display a success message or redirect, etc.)
                        if (response.status) {
                            showAlert('success',"Answer create successfully");
                            callApiGetClassDetail();
                            showAlert('','');
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (xhr, status, error) {
                        // Handle error (display the validation message, etc.)
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                    }
                });
            }
            function callApiGetClassDetail() {
                $.ajax({
                    url: apiUrl + 'Class/@Model.ClassID', // API endpoint
                    type: 'GET',
                    success: function (response) {
                        // Log the entire response to the console for debugging
                        // Check if the status is true
                        if (response.status) {
                            console.log(response.data);
                            setQuestionDisplay(response.data);
                            // Check if homeworkAnswers is empty
                            if(response.data.enrolls && response.data.enrolls.length > 0) {
                                var filteredEnrollList = response.data.enrolls.filter(function (enroll) {
                                    return enroll.status === 'Enrolled';
                                });
                                table.clear().rows.add(filteredEnrollList).draw();
                            }
                            if (response.data.schedules && response.data.schedules.length > 0) {
                                // Clear any existing answers
                                $('#schedule_list').empty();

                                // Loop through each answer and generate the HTML
                                // response.data.homeworkAnswers.forEach(function (answer) {
                                //     let answerHtml = generateAnswerHtml(answer,response.data.courseStatus); Assuming both answerInfo and updateAnswer are the same structure
                                //     $('#schedule_list').append(answerHtml);
                                // });
                            } else {
                                // If the answer list is empty
                                $('#schedule_list').html('<h5>No schedules found</h5>');
                            }
                        } else {
                            console.error("API returned false status.");
                        }
                    },
                    error: function (error) {
                        alert("Error in api call:" + error);
                        console.error("Error in api call:", error);
                        //showAlert('success', 'Data fetched successfully.');
                    }
                });
            }
            // function generateAnswerHtml(answerInfo,status) {
            //     var answerUpdateToggleHtml = status === 'Draft' || status === 'Postponed' || status === 'NotFound' ? `
            //         <div class="edit-info">
            //             <i class='bx bxs-edit bx-sm' data-toggle="modal" data-target="#editanswer_${answerInfo.homeworkAnswerId}"></i>
            //         </div>
            //     ` : '';
            //     var answerUpdateHtml = status === 'Draft' || status === 'Postponed' || status === 'NotFound' ? `
            //         <div id="editanswer_${answerInfo.homeworkAnswerId}" class="modal fade" role="dialog">
            //             <div class="modal-dialog modal-dialog-centered modal-lg" role="content">
            //                 <div class="modal-content modal-addRoom">
            //                     <div class="modal-header">
            //                         <h4 class="modal-title truncate">Update Answer ${answerInfo.answer}</h4>
            //                     </div>
            //                     <form method="put" class="form-group" id="editAnswerForm_${answerInfo.homeworkAnswerId}">
            //                         <div class="modal-body">
            //                             <div class="col-12">
            //                                 <div class="form-group row">
            //                                     <label for="updateAnswer_${answerInfo.homeworkAnswerId}_Answer" class="col-sm-4 col-form-label">Answer</label>
            //                                     <div class="col-sm-8">
            //                                         <textarea id="updateAnswer_${answerInfo.homeworkAnswerId}_Answer" name="Answer" required class="form-control">${answerInfo.answer}</textarea>
            //                                         <span class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2" id="error_message"></span>
            //                                     </div>
            //                                 </div>
            //                                 <div class="form-group row">
            //                                     <label for="updateAnswer_${answerInfo.homeworkAnswerId}_Type" class="col-sm-4 col-form-label">Answer Type</label>
            //                                     <div class="col-sm-8">
            //                                         <select id="updateAnswer_${answerInfo.homeworkAnswerId}_Type" name="Type" class="form-control custom-select">
            //                                             ${getTypeOptions(answerInfo.type)}
            //                                         </select>
            //                                         <span class="helper-text text-danger d-block offset-md-5 col-md-5 col-sm-8 mt-2" id="error_message"></span>
            //                                     </div>
            //                                 </div>
            //                             </div>
            //                         </div>
            //                         <div class="modal-footer justify-content-center">
            //                             <button class="btn btn-success" type="submit" value="Update">Save</button>
            //                             <button class="btn btn-danger" type="button" data-dismiss="modal">Cancel</button>
            //                         </div>
            //                     </form>
            //                 </div>
            //             </div>
            //         </div>
            //     ` : '';
            //     return `
            //     <div class="card-header">
            //         <h5>Answer <label class="truncate">${answerInfo.answer}</label> Details</h5>
            //         ` + answerUpdateToggleHtml + `
            //     </div>
            //     <div class="card-body">
            //         <div class="row mb-sm-2">
            //             <div class="col-md-5 text-md-right">
            //                 <label class="col-form-label">Answer ID:</label>
            //             </div>
            //             <div class="col-md-7">
            //                 <span>${answerInfo.homeworkAnswerId}</span>
            //             </div>
            //         </div>
            //         <div class="row mb-sm-2">
            //             <div class="col-sm-5 text-sm-right">
            //                 <label for="meeting-name">Answer:</label>
            //             </div>
            //             <div class="col-sm-7 text-sm-left">
            //                 <span>${answerInfo.answer}</span>
            //             </div>
            //         </div>
            //         <div class="row mb-sm-2">
            //             <div class="col-sm-5 text-sm-right">
            //                 <label for="meeting-name">Answer Type:</label>
            //             </div>
            //             <div class="col-sm-7 text-sm-left">
            //                 <span>${answerInfo.type}</span>
            //             </div>
            //         </div>
            //     </div>
            //     <hr class="container my-0">
            //     ` + answerUpdateHtml;
            // }
            function formatDate(date) {
                let d = new Date(date);

                // Get day, month, year
                let day = String(d.getDate()).padStart(2, '0');
                let month = String(d.getMonth() + 1).padStart(2, '0'); // Months are zero-based
                let year = d.getFullYear();

                // Get hours, minutes
                let hours = String(d.getHours()).padStart(2, '0');
                let minutes = String(d.getMinutes()).padStart(2, '0');

                // Optionally, get seconds
                let seconds = String(d.getSeconds()).padStart(2, '0');

                // Return the formatted date and time as `dd/mm/yyyy hh:mm`
                return `${day}/${month}/${year} ${hours}:${minutes}`;

                // If you want to include seconds as well, use this return:
                // return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
            }
            function getTypeOptions(selectedType) {
                var options = ['Incorrect', 'Correct']; // Example statuses
                var html = '';

                options.forEach(function (type) {
                    html += `<option value="${type}" ${selectedType === type ? 'selected' : ''}>${type}</option>`;
                });

                return html;
            }

            function setQuestionDisplay(data) {
                var titleStatusHtml = data.status === 'Draft' || data.status === 'Postponed' ? `
                    <div class="edit-info" id="class-class-status">
                        <i class='bx bxs-adjust bx-sm' data-toggle="modal" data-target="#changeClassStatus"></i>
                        <i class='bx bxs-edit bx-sm' data-toggle="modal" data-target="#editClass"></i>
                    </div>
                    ` : '';
                // var answerAddHtml = data.status === 'Draft' || data.status === 'Postponed' ? `
                //     <div class="edit-info" id="question-add-answer">
                //         <i class='bx bxs-add-to-queue bx-sm' data-toggle="modal" data-target="#createAnswer"></i>
                //     </div>
                //     ` : '';
                $('#class-title-status').find('#class-class-status').remove();
                // $('#class-allow-add-').find('#class-add-answer').remove();
                $('#class-id').text(data.classId);
                $('#class-class-title').text(data.className);
                $('#class-name').text(data.className);
                $('#class-teacher').text(data.teacher.account.fullname);
                $('#class-teacher').attr('href', `/Admin/Teacher/${data.teacher.accountId}/Info`);
                $('#class-course').text(data.course.courseName);
                $('#class-course').attr('href', `/Admin/Course/${data.course.courseId}/Info`);
                $('#class-start-date').text(formatDate(data.startDate));
                $('#class-end-date').text(formatDate(data.endDate));
                $('#class-current-students-amount').text(data.enrolls.length + ' Student(s)');
                $('#class-minimum-students-amount').text(data.minimumStudents);
                $('#class-maximum-students-amount').text(data.maximumStudents);
                $('#class-title-status').append(titleStatusHtml);
                // $('#question-allow-add-answer').append(answerAddHtml);
                $('#class-schedules-amount').text(data.schedules.length + ' Scheduled Session(s)');

                $('#updateQuestion_Question').text(data.question);
                $('#createAnswer_Type').append(getTypeOptions());
            }
        </script>
    </body>
</html>