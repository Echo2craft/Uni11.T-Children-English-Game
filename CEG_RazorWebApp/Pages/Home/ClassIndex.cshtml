@page "/Home/Class/Index"
@model CEG_RazorWebApp.Pages.Home.ClassIndexModel
@{
    ViewData["Title"] = "Children English Game Class List Page";
}
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/Meeting.css">
</head>
<body class="background">
    @* <div class="Title"><h1>Classes</h1></div> *@
    <hr />
    @* <div class="header__breadcrumb container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Home/Index" class="text-decoration-none">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">All Classes</li>
            </ol>
        </nav>
    </div> *@
    <!-- CONTENT -->
    <section class="content__list-room container">
        <div class="row my-3">
            <div class="input-group">
                <input type="text" id="search-input" class="col-10 form-control" placeholder="Search classes..." onkeyup="filterClasses()">
                <select id="filter-type" class="col-2 form-control custom-select">
                    <option value="className">By Name</option>
                    <option value="status">By Status</option>
                </select>
            </div>
        </div>
        <div class="row contain">
            <div class="col-12">
                <div id="class-list" class="content__list row">
                    <!-- Class list will be rendered here -->
                </div>
                <div class="pagination mb-3" id="pagination-controls">
                    <!-- Pagination buttons will be generated here -->
                </div>
            </div>
        </div>
    </section>
    <script>
        var apiUrl = sessionStorage.getItem('apiUrl');
        var classList = []; // Store all fetched classes
        var pageSize = 9; // Number of items per page
        var currentPage = 1;
        var filteredClassList = [];
        $(document).ready(function () {
            callApiGetClassList();
        });
        function callApiGetClassList() {
            $.ajax({
                url: apiUrl + 'Class/All/Home', // API endpoint
                type: 'GET',
                success: function (response) {
                    // Check if the status is true
                    if (response.status) {
                        classList = response.data;
                        filteredClassList = classList; // Initialize filtered list
                        setClassDisplay();
                        setPaginationDisplay();
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (xhr, status, error) {
                    // Extract the custom error message if it exists
                    var errorMessage = errorResponse.errorMessage || errorResponse.title || "An unknown error occurred.";
                    // Check if errorResponse.errors exists and is an object
                    if (errorResponse.errors && typeof errorResponse.errors === 'object') {
                        // Loop through each field in the errors object and append to the errorMessage
                        for (var field in errorResponse.errors) {
                            if (errorResponse.errors.hasOwnProperty(field)) {
                                // Add each error message for the field, joining multiple messages if they exist
                                var fieldErrors = errorResponse.errors[field].join(", ");
                                errorMessage += `\n${field}: ${fieldErrors}`;
                            }
                        }
                    }
                    // Display the error message using your custom showAlert function
                    showAlert('error', "Error:" + errorMessage);
                }
            });
        }
        function setClassDisplay() {
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize, filteredClassList.length);

            formatter = new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND',
            });

            // Clear existing content
            var classListContainer = $('#class-list');
            classListContainer.empty();

            if (filteredClassList.length === 0) {
                // Handle empty state
                classListContainer.append('<div class="col-12 text-center"><p>No classes available.</p></div>');
                return;
            }

            // Loop through the current page's data
            var currentPageData = filteredClassList.slice(startIndex, endIndex);
            currentPageData.forEach(function (classItem) {
                var formattedStartDate = formatDate(classItem.startDate, { ignoreHour : true });
                var formattedEndDate = formatDate(classItem.endDate, { ignoreHour: true });
                var classHtml = `
                    <div class="col-md-4 mb-4">
                        <div class="card">
                            <div class="card-header bg-primary text-white">
                                <h5 class="card-title">${classItem.className}</h5>
                                <span class="badge bg-info">${classItem.status}</span>
                            </div>
                            <div class="card-body">
                                <p><strong>Students:</strong> ${classItem.numberOfStudents}/${classItem.maximumStudents} students</p>
                                <p><strong>Start Date:</strong> ${formattedStartDate}</p>
                                <p><strong>End Date:</strong> ${formattedEndDate}</p>
                                <p><strong>Enrollment Fee:</strong> ${formatter.format(classItem.enrollmentFee)}</p>
                            </div>
                            <div class="card-footer">
                                <button class="btn btn-primary" onclick="viewClassDetails(${classItem.classId})">Details</button>
                            </div>
                        </div>
                    </div>
                `;
                classListContainer.append(classHtml);
            });
        }
        function setPaginationDisplay() {
            var totalPages = Math.ceil(classList.length / pageSize); // Total number of pages
            var paginationContainer = $('.pagination');

            // Clear existing pagination
            paginationContainer.empty();

            if (totalPages <= 1) {
                return; // No pagination needed if only one page
            }

            // Previous button
            paginationContainer.append(`
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <button class="page-link" onclick="changePage(${currentPage - 1})">Previous</button>
                </li>
            `);

            // Page numbers
            for (var i = 1; i <= totalPages; i++) {
                paginationContainer.append(`
                    <li class="page-item ${currentPage === i ? 'active' : ''}">
                        <button class="page-link" onclick="changePage(${i})">${i}</button>
                    </li>
                `);
            }

            // Next button
            paginationContainer.append(`
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <button class="page-link" onclick="changePage(${currentPage + 1})">Next</button>
                </li>
            `);
        }
        function changePage(newPage) {
            var totalPages = Math.ceil(classList.length / pageSize);

            // Ensure the new page is within valid range
            if (newPage < 1 || newPage > totalPages) {
                return;
            }

            currentPage = newPage;

            // Update the display
            updateDisplay();
        }
        function updateDisplay() {
            setClassDisplay();
            setPaginationDisplay();
        }
        function filterClasses() {
            var searchTerm = $('#search-input').val().toLowerCase();
            var filterType = $('#filter-type').val(); // Get selected filter type

            // Filter classes based on className or other criteria
            // filteredClassList = classList.filter(clazz =>
            //     clazz.className.toLowerCase().includes(searchTerm)
            // );

            // Filter courses based on the selected property
            filteredClassList = classList.filter(clazz => {
                if (clazz[filterType]) {
                    return clazz[filterType].toString().toLowerCase().includes(searchTerm);
                }
                return false;
            });

            // Reset pagination
            currentPage = 1;

            // Update display with filtered results
            updateDisplay();
        }
    </script>
</body>
</html>