@page "/courses"
@model CEG_RazorWebApp.Pages.Home.CourseIndexModel
@{
    ViewData["Title"] = "Children English Game Course List Page";
}
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/Meeting.css">
</head>
<body class="background">
    @* <div class="Title"><h1>Courses</h1></div>
    <hr />
    <div class="header__breadcrumb container">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Home/Index" class="text-decoration-none">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">All Courses</li>
            </ol>
        </nav>
    </div> *@
    <!-- CONTENT -->
    <section class="content__list-room container">
        <div class="row my-3">
            <div class="input-group">
                <input type="text" id="search-input" class="col-10 form-control" placeholder="Search courses..." onkeyup="filterCourses()">
                <select id="filter-type" class="col-2 form-control custom-select">
                    <option value="courseName">By Name</option>
                    <option value="courseType">By Type</option>
                    <option value="difficulty">By Age</option>
                    <option value="difficulty">By Difficulty</option>
                    <option value="status">By Status</option>
                </select>
            </div>
        </div>
        <div class="row contain">
            <div class="col-12">
                <div id="course-list" class="content__list row">
                    <!-- Course list will be rendered here -->
                </div>
                <div class="pagination mb-3" id="pagination-controls">
                    <!-- Pagination buttons will be generated here -->
                </div>
            </div>
        </div>
    </section>
    <script>
        var apiUrl = sessionStorage.getItem('apiUrl');
        var courseList;
        var pageSize = 9;
        var currentPage = 1;
        var filteredCourseList = [];
        $(document).ready(function () {
            callApiGetCourseList();
        });
        function callApiGetCourseList() {
            $.ajax({
                url: apiUrl + 'Course/All/Available', // API endpoint
                type: 'GET',
                success: function (response) {
                    // Check if the status is true
                    if (response.status) {
                        courseList = response.data;
                        filteredCourseList = courseList; // Initialize filtered list
                        setCourseDisplay();
                        setPaginationDisplay();
                    } else {
                        console.error("API returned false status.");
                    }
                },
                error: function (xhr, status, error) {
                    // Extract the custom error message if it exists
                    var errorMessage = errorResponse.errorMessage || errorResponse.title || "An unknown error occurred.";
                    // Check if errorResponse.errors exists and is an object
                    if (errorResponse.errors && typeof errorResponse.errors === 'object') {
                        // Loop through each field in the errors object and append to the errorMessage
                        for (var field in errorResponse.errors) {
                            if (errorResponse.errors.hasOwnProperty(field)) {
                                // Add each error message for the field, joining multiple messages if they exist
                                var fieldErrors = errorResponse.errors[field].join(", ");
                                errorMessage += `\n${field}: ${fieldErrors}`;
                            }
                        }
                    }
                    // Display the error message using your custom showAlert function
                    showAlert('error', "Error:" + errorMessage);
                }
            })
        }
        function setCourseDisplay() {
            var startIndex = (currentPage - 1) * pageSize;
            var endIndex = Math.min(startIndex + pageSize, filteredCourseList.length);

            formatter = new Intl.NumberFormat('vi-VN', {
                style: 'currency',
                currency: 'VND',
            });

            // Clear existing content
            var courseListContainer = $('#course-list');
            courseListContainer.empty();

            if (filteredCourseList.length === 0) {
                // Handle empty state
                courseListContainer.append('<div class="col-12 text-center"><p>No courses available.</p></div>');
                return;
            }

            // Loop through the current page's data
            var currentPageData = filteredCourseList.slice(startIndex, endIndex);
            currentPageData.forEach(function (courseItem) {
                // var formattedStartDate = formatDate(courseItem.startDate, { ignoreHour: true });
                // var formattedEndDate = formatDate(courseItem.endDate, { ignoreHour: true });
                var courseHtml = `
                            <div class="col-12 col-lg-4 col-md-6 mb-4">
                                <div class="card">
                                    <div class="card-header bg-card-header text-black">
                                        <h5 class="card-title bg-card-header-text">${courseItem.courseName}</h5>
                                        <h3><span class="badge badge-primary bg-info">${courseItem.status}</span></h3>
                                    </div>
                                    <div class="card-body">
                                        <p><strong>Type:</strong> ${courseItem.courseType}</p>
                                        <p><strong>Duration:</strong> ${courseItem.totalHours} hours</p>
                                        <p><strong>For age:</strong> ${courseItem.requiredAge} years old</p>
                                        <p><strong>Difficulty:</strong> ${courseItem.difficulty}</p>
                                    </div>
                                    <div class="card-footer">
                                        <button class="btn btn-skyblue btn-guest-details" onclick="viewClassDetails(${courseItem.courseId})">Details</button>
                                    </div>
                                </div>
                            </div>
                        `;
                courseListContainer.append(courseHtml);
            });
        }
        function setPaginationDisplay() {
            var totalPages = Math.ceil(courseList.length / pageSize); // Total number of pages
            var paginationContainer = $('.pagination');

            // Clear existing pagination
            paginationContainer.empty();

            if (totalPages <= 1) {
                return; // No pagination needed if only one page
            }

            // Previous button
            paginationContainer.append(`
                        <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                            <button class="page-link" onclick="changePage(${currentPage - 1})">Previous</button>
                        </li>
                    `);

            // Page numbers
            for (var i = 1; i <= totalPages; i++) {
                paginationContainer.append(`
                            <li class="page-item ${currentPage === i ? 'active' : ''}">
                                <button class="page-link" onclick="changePage(${i})">${i}</button>
                            </li>
                        `);
            }

            // Next button
            paginationContainer.append(`
                        <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                            <button class="page-link" onclick="changePage(${currentPage + 1})">Next</button>
                        </li>
                    `);
        }
        function changePage(newPage) {
            var totalPages = Math.ceil(courseList.length / pageSize);

            // Ensure the new page is within valid range
            if (newPage < 1 || newPage > totalPages) {
                return;
            }

            currentPage = newPage;

            // Update the display
            updateDisplay();
        }
        function updateDisplay() {
            setCourseDisplay();
            setPaginationDisplay();
        }
        function filterCourses() {
            var searchTerm = $('#search-input').val().toLowerCase();
            var filterType = $('#filter-type').val(); // Get selected filter type

            // Filter courses based on courseName or other criteria
            // filteredCourseList = courseList.filter(course =>
            //     course.courseName.toLowerCase().includes(searchTerm) ||
            //     course.courseType.toLowerCase().includes(searchTerm) ||
            //     course.difficulty.toLowerCase().includes(searchTerm)
            // );

            // Filter courses based on the selected property
            filteredCourseList = courseList.filter(course => {
                if (course[filterType]) {
                    return course[filterType].toString().toLowerCase().includes(searchTerm);
                }
                return false;
            });

            // Reset pagination
            currentPage = 1;

            // Update display with filtered results
            updateDisplay();
        }
    </script>
</body>
</html>